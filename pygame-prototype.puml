@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
' use +, \#, - instead of icons for public, protected, private


package pygame {
  class Sprite {
    + update()
  }
  class Clock
  class Sound
}

class Bird extends GameSprite {
+ {static} Min_Speed : int
+ {static} Max_Speed : int
- speed : int
- time : int
+update()
+clone() : Bird
}

class GameSprite extends pygame.Sprite 
class Cloud extends GameSprite {
+update()
+clone() : Cloud
}

class Missile extends GameSprite {
+ {static} Min_Speed : int
+ {static} Max_Speed : int
- speed : int
- time : int
+update()
+clone() : Missile
}

class Umbrella extends GameSprite {
- speed : int
- time : int
+update()
+clone() : Umbrella
}

class Jet extends GameSprite {
+ {static} Min_Speed : int
+ {static} Max_Speed : int
- speed : int
- time : int
+update()
+clone() : Jet
}

class Mountain extends GameSprite {
+update()
+clone() : Mountain
}

class Player extends pygame.Sprite {
- move_up_sound : Sound
- move_down_sound : Sound
+ update(pressed_keys : boolean[])
+ stop_move_sounds()
}

class Game {
- user_quits : boolean
+ play()
''' comment out private methods
'- initialize_game()
'- make_objects()
'- load_music_and_sound()
'- play_music()
'- process_event()
'- draw()
'- collision() : boolean
'- game_over() : boolean
'- keep_frame_rate()
'- update()
}

class FactorySprites{
- periods
- event_types
+ make() : GameSprite
}

FactorySprites --> GameSprite : prototypes "1..*"
Game --> Clock : clock "1"
Game --> Sprite : all_sprites "1..*"
Game --> GameSprite : landscape_sprites "1"
Game --> GameSprite : flying_sprites "1"
Game --> FactorySprites : factory_flying "1"
Game --> FactorySprites : factory_landscape "1"
Game --> Player : player "1"

''' positioning
Player -[hidden]down-> Game
Sprite -[hidden]down-> Bird
Sprite -[hidden]down-> Cloud
@enduml